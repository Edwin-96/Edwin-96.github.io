{"version":3,"sources":["jsx/SideMenu.jsx","App.js","reportWebVitals.js","index.js"],"names":["SideMenu","props","useState","toggle","toggleBar","show","className","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","items","map","item","index","MenuItem","title","active","activeStyle","href","Section","prop","id","section","App","setActive","offset","setOffset","darkMode","setDarkMode","sections","onScroll","event","target","scrollHeight","scrollTop","factor","length","Math","round","floor","ceil","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAGA,SAASA,EAAUC,GAElB,MAA0BC,oBAAS,GAAnC,mBAAKC,EAAL,KAAaC,EAAb,KACIC,EAAOF,EAAQ,GAAG,oBAEtB,OAAO,sBAAKG,UAAU,eAAf,UACN,sBAAKA,UAAU,yJAAf,UACC,wBAAQA,UAAU,MAAlB,kBACA,wBAAQA,UAAU,MAAMC,QAAS,kBAAIH,GAAWD,IAAhD,SACC,qBAAKK,MAAM,6BAA6BF,UAAU,UAAUG,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAnG,SACC,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,mCAGxE,sBAAKT,UAAW,yLAA2LD,EAAO,yDAAlN,UACC,qBAAKC,UAAU,WAAf,SACC,qBAAKA,UAAU,4IAAf,oBAEAL,EAAMe,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAAiB,cAACC,EAAD,CAAsBC,MAAOH,EAAKG,MAAOC,OAAQJ,EAAKI,SAAWH,GAAlDA,YAKpD,SAASC,EAAUnB,GAElB,IAEIsB,EAFStB,EAAMqB,OAEM,kHAAkH,GAG3I,OAAO,qBAAKhB,UAAWiB,gDAAhB,SACL,mBAAGC,KAAM,IAAIvB,EAAMoB,MAAOf,UALnB,oBAKP,SAA6CL,EAAMoB,UC3BtD,SAASI,EAAQC,GACf,OAAO,yBAASC,GAAID,EAAKE,QAAQP,MAAOf,UAAU,eAA3C,SAA2DoB,EAAKE,QAAQP,QA+DlEQ,MA5Df,WAEE,MAA2B3B,mBAAS,GAApC,mBAAOiB,EAAP,KAAcW,EAAd,KACA,EAA4B5B,mBAAS,GAArC,mBAAO6B,EAAP,KAAeC,EAAf,KACA,EAAgC9B,oBAAS,GAAzC,mBAAO+B,EAAP,KAAiBC,EAAjB,KAGIC,EAAW,CACb,CACEd,MAAO,OACPC,OAAQH,GAEV,CACEE,MAAO,SACPC,OAAQH,GAEV,CACEE,MAAO,OACPC,OAAQH,GAEV,CACEE,MAAO,UACPC,OAAQH,IAkBZ,OACE,sBAAKb,UAAW,mCAAqC2B,EAAS,QAAQ,IAAtE,UAEE,cAAC,EAAD,CAAUjB,MAAOmB,IACjB,sBAAK7B,UAAU,gFAAgF8B,SAlBpF,SAACC,GACd,MAAgCA,EAAMC,OAAjCC,EAAL,EAAKA,aAAcC,EAAnB,EAAmBA,UAGfC,EAASD,GAFKD,EAAeJ,EAASO,QAGtCvB,EAAQqB,EAAYT,EACtBY,KAAKC,MAAMD,KAAKE,MAAMJ,EAAS,KAC/BE,KAAKC,MAAMD,KAAKG,KAAKL,EAAS,KAGhCX,EAAUX,GACVa,EAAUQ,IAOR,UACE,wBAAQlC,UAAU,6HAA6HC,QAAS,kBAAM2B,GAAaD,IAA3K,SACGA,EACC,qBAAKzB,MAAM,6BAA6BF,UAAU,UAAUG,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAnG,SACE,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,4FAEvE,qBAAKP,MAAM,6BAA6BF,UAAU,UAAUG,KAAK,OAAOC,QAAQ,YAAYC,OAAO,eAAnG,SACE,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,8JAG1EoB,EAASlB,KAAI,SAACW,GAAD,OAAa,cAACH,EAAD,CAA6BG,QAASA,GAAxBA,EAAQP,iBCpD1C0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a0115c3f.chunk.js","sourcesContent":["import { useState } from 'react'\nimport '../css/SideMenu.css'\n\nfunction SideMenu (props) {\n\n\tlet [toggle, toggleBar] = useState(false);\n\tlet show = toggle? \"\":\"-translate-x-full\";\n\n\treturn <div className=\"sticky top-0\">\n\t\t<nav className=\"dark:bg-gradient-to-b dark:from-blue-900 dark:to-blue-800 dark:text-gray-200 bg-gradient-to-b from-blue-400 to-blue-300 flex justify-between md:hidden\">\n\t\t\t<button className=\"p-3\">Home</button>\n\t\t\t<button className=\"p-3\" onClick={()=>toggleBar(!toggle)}>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  \t\t\t<path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n\t\t\t</svg></button>\n\t\t</nav>\n\t\t<nav className={\"dark:bg-gradient-to-b dark:from-blue-900 dark:to-blue-800 dark:text-gray-200 bg-gradient-to-b from-blue-400 to-blue-300 w-64 h-screen absolute md:relative inset-y-0 left-0 transform \" + show + \" md:-translate-x-0 transition duration-200 ease-in-out\"}>\n\t\t\t<div className=\"h-40 p-5\">\n\t\t\t\t<div className=\"rounded-full h-24 w-24 flex items-center justify-center bg-white bg-opacity-25 dark:bg-black dark:bg-opacity-25 dark:text-gray-200 m-auto\">Foto</div>\n\t\t\t</div>\n\t\t\t{props.items.map((item, index) => <MenuItem key={index} title={item.title} active={item.active === index} />)}\n\t\t</nav>\n\t</div>\n}\n\nfunction MenuItem (props) {\n\t\n\tlet active = props.active\n\tlet style = `block py-2.5 px-4`\n\tlet activeStyle = active?\"w-full bg-white dark:bg-black dark:bg-opacity-25 dark:text-gray-200 bg-opacity-25 backdrop-filter backdrop-blur\":\"\";\n\tlet transition = \"transition-colors duration-200 ease-in-out\"\n\n\treturn <div className={activeStyle + \" \"+ transition}>\n\t\t\t<a href={\"#\"+props.title} className={style}>{props.title}</a>\t\n\t</div>\n}\n\nexport {\n\tSideMenu,\n\tMenuItem\n}","import './App.css';\n// import {ButtonSuccess} from './jsx/Button';\nimport { SideMenu } from './jsx/SideMenu';\nimport { useState} from 'react';\n\n\nfunction Section(prop) {\n  return <section id={prop.section.title} className=\"h-screen p-4\">{prop.section.title}</section>\n}\n\nfunction App() {\n\n  const [index, setActive] = useState(0);\n  const [offset, setOffset] = useState(0);\n  const [darkMode, setDarkMode] = useState(false);\n  //console.log(offset);\n\n  let sections = [\n    {\n      title: 'Home',\n      active: index\n    },\n    {\n      title: 'Resume',\n      active: index\n    },\n    {\n      title: 'Blog',\n      active: index\n    },\n    {\n      title: 'Contact',\n      active: index\n    }\n  ];\n\n  const scroll = (event) => {\n    let {scrollHeight, scrollTop} = event.target;\n    let sectionSize = scrollHeight / sections.length;\n    // scrollTop > offset = scrolling down else scrolling up\n    let factor = scrollTop / sectionSize\n    let index = scrollTop > offset ?\n      Math.round(Math.floor(factor + 0.3)):\n      Math.round(Math.ceil(factor - 0.3));\n    //let index = Math.round(Math.floor(factor + 0.1))\n    //event.target.scrollTop = (index * sectionSize);\n    setActive(index);\n    setOffset(scrollTop);\n  }\n\n  return (\n    <div className={\"md:relative md:h-screen md:flex\" + (darkMode?\" dark\":\"\")}>\n      {/* <div className=\"sticky top-0 w-full h-14 bg-green-800\"></div> */}\n      <SideMenu items={sections}/>\n      <div className=\"md:overflow-y-scroll w-full smooth-scroll dark:bg-gray-800 dark:text-gray-200\" onScroll={scroll}>\n        <button className=\"fixed md:top-4 md:bottom-auto md:right-7 right-3 bottom-3 p-2 bg-gray-200 rounded-full dark:bg-gray-700 dark:text-gray-200\" onClick={() => setDarkMode(!darkMode)}>\n          {darkMode?\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\" />\n            </svg>:\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\" />\n            </svg>}\n        </button>\n        {sections.map((section) => <Section key={section.title} section={section}/>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}